//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.225
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 3.0.40818.0
// 
namespace SilverlightApplication.WcfService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfService.IUnit")]
    public interface IUnit {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUnit/Power", ReplyAction="http://tempuri.org/IUnit/PowerResponse")]
        System.IAsyncResult BeginPower(string key, System.AsyncCallback callback, object asyncState);
        
        double EndPower(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUnit/HisPower", ReplyAction="http://tempuri.org/IUnit/HisPowerResponse")]
        System.IAsyncResult BeginHisPower(string key, System.AsyncCallback callback, object asyncState);
        
        double EndHisPower(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUnit/PowerMax", ReplyAction="http://tempuri.org/IUnit/PowerMaxResponse")]
        System.IAsyncResult BeginPowerMax(string key, System.AsyncCallback callback, object asyncState);
        
        double EndPowerMax(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUnit/PowerMin", ReplyAction="http://tempuri.org/IUnit/PowerMinResponse")]
        System.IAsyncResult BeginPowerMin(string key, System.AsyncCallback callback, object asyncState);
        
        double EndPowerMin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUnit/PowerAvg", ReplyAction="http://tempuri.org/IUnit/PowerAvgResponse")]
        System.IAsyncResult BeginPowerAvg(string key, System.AsyncCallback callback, object asyncState);
        
        double EndPowerAvg(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUnit/Flow", ReplyAction="http://tempuri.org/IUnit/FlowResponse")]
        System.IAsyncResult BeginFlow(string key, System.AsyncCallback callback, object asyncState);
        
        double EndFlow(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUnit/Pressure", ReplyAction="http://tempuri.org/IUnit/PressureResponse")]
        System.IAsyncResult BeginPressure(string key, System.AsyncCallback callback, object asyncState);
        
        double EndPressure(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUnit/Temperature", ReplyAction="http://tempuri.org/IUnit/TemperatureResponse")]
        System.IAsyncResult BeginTemperature(string key, System.AsyncCallback callback, object asyncState);
        
        double EndTemperature(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUnit/ReheatTemperature", ReplyAction="http://tempuri.org/IUnit/ReheatTemperatureResponse")]
        System.IAsyncResult BeginReheatTemperature(string key, System.AsyncCallback callback, object asyncState);
        
        double EndReheatTemperature(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUnit/Vacuum", ReplyAction="http://tempuri.org/IUnit/VacuumResponse")]
        System.IAsyncResult BeginVacuum(string key, System.AsyncCallback callback, object asyncState);
        
        double EndVacuum(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUnit/Efficiency", ReplyAction="http://tempuri.org/IUnit/EfficiencyResponse")]
        System.IAsyncResult BeginEfficiency(string key, System.AsyncCallback callback, object asyncState);
        
        double EndEfficiency(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUnit/Heatconsumption", ReplyAction="http://tempuri.org/IUnit/HeatconsumptionResponse")]
        System.IAsyncResult BeginHeatconsumption(string key, System.AsyncCallback callback, object asyncState);
        
        double EndHeatconsumption(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUnit/Coalconsumption", ReplyAction="http://tempuri.org/IUnit/CoalconsumptionResponse")]
        System.IAsyncResult BeginCoalconsumption(string key, System.AsyncCallback callback, object asyncState);
        
        double EndCoalconsumption(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUnit/Val", ReplyAction="http://tempuri.org/IUnit/ValResponse")]
        System.IAsyncResult BeginVal(string key, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<double> EndVal(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUnitChannel : SilverlightApplication.WcfService.IUnit, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PowerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PowerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public double Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HisPowerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HisPowerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public double Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PowerMaxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PowerMaxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public double Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PowerMinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PowerMinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public double Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PowerAvgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PowerAvgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public double Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FlowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FlowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public double Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PressureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PressureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public double Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TemperatureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public TemperatureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public double Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReheatTemperatureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReheatTemperatureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public double Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VacuumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public VacuumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public double Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EfficiencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EfficiencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public double Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HeatconsumptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HeatconsumptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public double Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CoalconsumptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CoalconsumptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public double Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ValCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ValCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<double> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<double>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UnitClient : System.ServiceModel.ClientBase<SilverlightApplication.WcfService.IUnit>, SilverlightApplication.WcfService.IUnit {
        
        private BeginOperationDelegate onBeginPowerDelegate;
        
        private EndOperationDelegate onEndPowerDelegate;
        
        private System.Threading.SendOrPostCallback onPowerCompletedDelegate;
        
        private BeginOperationDelegate onBeginHisPowerDelegate;
        
        private EndOperationDelegate onEndHisPowerDelegate;
        
        private System.Threading.SendOrPostCallback onHisPowerCompletedDelegate;
        
        private BeginOperationDelegate onBeginPowerMaxDelegate;
        
        private EndOperationDelegate onEndPowerMaxDelegate;
        
        private System.Threading.SendOrPostCallback onPowerMaxCompletedDelegate;
        
        private BeginOperationDelegate onBeginPowerMinDelegate;
        
        private EndOperationDelegate onEndPowerMinDelegate;
        
        private System.Threading.SendOrPostCallback onPowerMinCompletedDelegate;
        
        private BeginOperationDelegate onBeginPowerAvgDelegate;
        
        private EndOperationDelegate onEndPowerAvgDelegate;
        
        private System.Threading.SendOrPostCallback onPowerAvgCompletedDelegate;
        
        private BeginOperationDelegate onBeginFlowDelegate;
        
        private EndOperationDelegate onEndFlowDelegate;
        
        private System.Threading.SendOrPostCallback onFlowCompletedDelegate;
        
        private BeginOperationDelegate onBeginPressureDelegate;
        
        private EndOperationDelegate onEndPressureDelegate;
        
        private System.Threading.SendOrPostCallback onPressureCompletedDelegate;
        
        private BeginOperationDelegate onBeginTemperatureDelegate;
        
        private EndOperationDelegate onEndTemperatureDelegate;
        
        private System.Threading.SendOrPostCallback onTemperatureCompletedDelegate;
        
        private BeginOperationDelegate onBeginReheatTemperatureDelegate;
        
        private EndOperationDelegate onEndReheatTemperatureDelegate;
        
        private System.Threading.SendOrPostCallback onReheatTemperatureCompletedDelegate;
        
        private BeginOperationDelegate onBeginVacuumDelegate;
        
        private EndOperationDelegate onEndVacuumDelegate;
        
        private System.Threading.SendOrPostCallback onVacuumCompletedDelegate;
        
        private BeginOperationDelegate onBeginEfficiencyDelegate;
        
        private EndOperationDelegate onEndEfficiencyDelegate;
        
        private System.Threading.SendOrPostCallback onEfficiencyCompletedDelegate;
        
        private BeginOperationDelegate onBeginHeatconsumptionDelegate;
        
        private EndOperationDelegate onEndHeatconsumptionDelegate;
        
        private System.Threading.SendOrPostCallback onHeatconsumptionCompletedDelegate;
        
        private BeginOperationDelegate onBeginCoalconsumptionDelegate;
        
        private EndOperationDelegate onEndCoalconsumptionDelegate;
        
        private System.Threading.SendOrPostCallback onCoalconsumptionCompletedDelegate;
        
        private BeginOperationDelegate onBeginValDelegate;
        
        private EndOperationDelegate onEndValDelegate;
        
        private System.Threading.SendOrPostCallback onValCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public UnitClient() {
        }
        
        public UnitClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UnitClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UnitClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UnitClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<PowerCompletedEventArgs> PowerCompleted;
        
        public event System.EventHandler<HisPowerCompletedEventArgs> HisPowerCompleted;
        
        public event System.EventHandler<PowerMaxCompletedEventArgs> PowerMaxCompleted;
        
        public event System.EventHandler<PowerMinCompletedEventArgs> PowerMinCompleted;
        
        public event System.EventHandler<PowerAvgCompletedEventArgs> PowerAvgCompleted;
        
        public event System.EventHandler<FlowCompletedEventArgs> FlowCompleted;
        
        public event System.EventHandler<PressureCompletedEventArgs> PressureCompleted;
        
        public event System.EventHandler<TemperatureCompletedEventArgs> TemperatureCompleted;
        
        public event System.EventHandler<ReheatTemperatureCompletedEventArgs> ReheatTemperatureCompleted;
        
        public event System.EventHandler<VacuumCompletedEventArgs> VacuumCompleted;
        
        public event System.EventHandler<EfficiencyCompletedEventArgs> EfficiencyCompleted;
        
        public event System.EventHandler<HeatconsumptionCompletedEventArgs> HeatconsumptionCompleted;
        
        public event System.EventHandler<CoalconsumptionCompletedEventArgs> CoalconsumptionCompleted;
        
        public event System.EventHandler<ValCompletedEventArgs> ValCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightApplication.WcfService.IUnit.BeginPower(string key, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPower(key, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        double SilverlightApplication.WcfService.IUnit.EndPower(System.IAsyncResult result) {
            return base.Channel.EndPower(result);
        }
        
        private System.IAsyncResult OnBeginPower(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string key = ((string)(inValues[0]));
            return ((SilverlightApplication.WcfService.IUnit)(this)).BeginPower(key, callback, asyncState);
        }
        
        private object[] OnEndPower(System.IAsyncResult result) {
            double retVal = ((SilverlightApplication.WcfService.IUnit)(this)).EndPower(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPowerCompleted(object state) {
            if ((this.PowerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PowerCompleted(this, new PowerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PowerAsync(string key) {
            this.PowerAsync(key, null);
        }
        
        public void PowerAsync(string key, object userState) {
            if ((this.onBeginPowerDelegate == null)) {
                this.onBeginPowerDelegate = new BeginOperationDelegate(this.OnBeginPower);
            }
            if ((this.onEndPowerDelegate == null)) {
                this.onEndPowerDelegate = new EndOperationDelegate(this.OnEndPower);
            }
            if ((this.onPowerCompletedDelegate == null)) {
                this.onPowerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPowerCompleted);
            }
            base.InvokeAsync(this.onBeginPowerDelegate, new object[] {
                        key}, this.onEndPowerDelegate, this.onPowerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightApplication.WcfService.IUnit.BeginHisPower(string key, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHisPower(key, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        double SilverlightApplication.WcfService.IUnit.EndHisPower(System.IAsyncResult result) {
            return base.Channel.EndHisPower(result);
        }
        
        private System.IAsyncResult OnBeginHisPower(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string key = ((string)(inValues[0]));
            return ((SilverlightApplication.WcfService.IUnit)(this)).BeginHisPower(key, callback, asyncState);
        }
        
        private object[] OnEndHisPower(System.IAsyncResult result) {
            double retVal = ((SilverlightApplication.WcfService.IUnit)(this)).EndHisPower(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHisPowerCompleted(object state) {
            if ((this.HisPowerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HisPowerCompleted(this, new HisPowerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HisPowerAsync(string key) {
            this.HisPowerAsync(key, null);
        }
        
        public void HisPowerAsync(string key, object userState) {
            if ((this.onBeginHisPowerDelegate == null)) {
                this.onBeginHisPowerDelegate = new BeginOperationDelegate(this.OnBeginHisPower);
            }
            if ((this.onEndHisPowerDelegate == null)) {
                this.onEndHisPowerDelegate = new EndOperationDelegate(this.OnEndHisPower);
            }
            if ((this.onHisPowerCompletedDelegate == null)) {
                this.onHisPowerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHisPowerCompleted);
            }
            base.InvokeAsync(this.onBeginHisPowerDelegate, new object[] {
                        key}, this.onEndHisPowerDelegate, this.onHisPowerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightApplication.WcfService.IUnit.BeginPowerMax(string key, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPowerMax(key, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        double SilverlightApplication.WcfService.IUnit.EndPowerMax(System.IAsyncResult result) {
            return base.Channel.EndPowerMax(result);
        }
        
        private System.IAsyncResult OnBeginPowerMax(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string key = ((string)(inValues[0]));
            return ((SilverlightApplication.WcfService.IUnit)(this)).BeginPowerMax(key, callback, asyncState);
        }
        
        private object[] OnEndPowerMax(System.IAsyncResult result) {
            double retVal = ((SilverlightApplication.WcfService.IUnit)(this)).EndPowerMax(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPowerMaxCompleted(object state) {
            if ((this.PowerMaxCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PowerMaxCompleted(this, new PowerMaxCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PowerMaxAsync(string key) {
            this.PowerMaxAsync(key, null);
        }
        
        public void PowerMaxAsync(string key, object userState) {
            if ((this.onBeginPowerMaxDelegate == null)) {
                this.onBeginPowerMaxDelegate = new BeginOperationDelegate(this.OnBeginPowerMax);
            }
            if ((this.onEndPowerMaxDelegate == null)) {
                this.onEndPowerMaxDelegate = new EndOperationDelegate(this.OnEndPowerMax);
            }
            if ((this.onPowerMaxCompletedDelegate == null)) {
                this.onPowerMaxCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPowerMaxCompleted);
            }
            base.InvokeAsync(this.onBeginPowerMaxDelegate, new object[] {
                        key}, this.onEndPowerMaxDelegate, this.onPowerMaxCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightApplication.WcfService.IUnit.BeginPowerMin(string key, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPowerMin(key, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        double SilverlightApplication.WcfService.IUnit.EndPowerMin(System.IAsyncResult result) {
            return base.Channel.EndPowerMin(result);
        }
        
        private System.IAsyncResult OnBeginPowerMin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string key = ((string)(inValues[0]));
            return ((SilverlightApplication.WcfService.IUnit)(this)).BeginPowerMin(key, callback, asyncState);
        }
        
        private object[] OnEndPowerMin(System.IAsyncResult result) {
            double retVal = ((SilverlightApplication.WcfService.IUnit)(this)).EndPowerMin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPowerMinCompleted(object state) {
            if ((this.PowerMinCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PowerMinCompleted(this, new PowerMinCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PowerMinAsync(string key) {
            this.PowerMinAsync(key, null);
        }
        
        public void PowerMinAsync(string key, object userState) {
            if ((this.onBeginPowerMinDelegate == null)) {
                this.onBeginPowerMinDelegate = new BeginOperationDelegate(this.OnBeginPowerMin);
            }
            if ((this.onEndPowerMinDelegate == null)) {
                this.onEndPowerMinDelegate = new EndOperationDelegate(this.OnEndPowerMin);
            }
            if ((this.onPowerMinCompletedDelegate == null)) {
                this.onPowerMinCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPowerMinCompleted);
            }
            base.InvokeAsync(this.onBeginPowerMinDelegate, new object[] {
                        key}, this.onEndPowerMinDelegate, this.onPowerMinCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightApplication.WcfService.IUnit.BeginPowerAvg(string key, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPowerAvg(key, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        double SilverlightApplication.WcfService.IUnit.EndPowerAvg(System.IAsyncResult result) {
            return base.Channel.EndPowerAvg(result);
        }
        
        private System.IAsyncResult OnBeginPowerAvg(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string key = ((string)(inValues[0]));
            return ((SilverlightApplication.WcfService.IUnit)(this)).BeginPowerAvg(key, callback, asyncState);
        }
        
        private object[] OnEndPowerAvg(System.IAsyncResult result) {
            double retVal = ((SilverlightApplication.WcfService.IUnit)(this)).EndPowerAvg(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPowerAvgCompleted(object state) {
            if ((this.PowerAvgCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PowerAvgCompleted(this, new PowerAvgCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PowerAvgAsync(string key) {
            this.PowerAvgAsync(key, null);
        }
        
        public void PowerAvgAsync(string key, object userState) {
            if ((this.onBeginPowerAvgDelegate == null)) {
                this.onBeginPowerAvgDelegate = new BeginOperationDelegate(this.OnBeginPowerAvg);
            }
            if ((this.onEndPowerAvgDelegate == null)) {
                this.onEndPowerAvgDelegate = new EndOperationDelegate(this.OnEndPowerAvg);
            }
            if ((this.onPowerAvgCompletedDelegate == null)) {
                this.onPowerAvgCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPowerAvgCompleted);
            }
            base.InvokeAsync(this.onBeginPowerAvgDelegate, new object[] {
                        key}, this.onEndPowerAvgDelegate, this.onPowerAvgCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightApplication.WcfService.IUnit.BeginFlow(string key, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFlow(key, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        double SilverlightApplication.WcfService.IUnit.EndFlow(System.IAsyncResult result) {
            return base.Channel.EndFlow(result);
        }
        
        private System.IAsyncResult OnBeginFlow(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string key = ((string)(inValues[0]));
            return ((SilverlightApplication.WcfService.IUnit)(this)).BeginFlow(key, callback, asyncState);
        }
        
        private object[] OnEndFlow(System.IAsyncResult result) {
            double retVal = ((SilverlightApplication.WcfService.IUnit)(this)).EndFlow(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFlowCompleted(object state) {
            if ((this.FlowCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FlowCompleted(this, new FlowCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FlowAsync(string key) {
            this.FlowAsync(key, null);
        }
        
        public void FlowAsync(string key, object userState) {
            if ((this.onBeginFlowDelegate == null)) {
                this.onBeginFlowDelegate = new BeginOperationDelegate(this.OnBeginFlow);
            }
            if ((this.onEndFlowDelegate == null)) {
                this.onEndFlowDelegate = new EndOperationDelegate(this.OnEndFlow);
            }
            if ((this.onFlowCompletedDelegate == null)) {
                this.onFlowCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFlowCompleted);
            }
            base.InvokeAsync(this.onBeginFlowDelegate, new object[] {
                        key}, this.onEndFlowDelegate, this.onFlowCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightApplication.WcfService.IUnit.BeginPressure(string key, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPressure(key, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        double SilverlightApplication.WcfService.IUnit.EndPressure(System.IAsyncResult result) {
            return base.Channel.EndPressure(result);
        }
        
        private System.IAsyncResult OnBeginPressure(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string key = ((string)(inValues[0]));
            return ((SilverlightApplication.WcfService.IUnit)(this)).BeginPressure(key, callback, asyncState);
        }
        
        private object[] OnEndPressure(System.IAsyncResult result) {
            double retVal = ((SilverlightApplication.WcfService.IUnit)(this)).EndPressure(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPressureCompleted(object state) {
            if ((this.PressureCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PressureCompleted(this, new PressureCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PressureAsync(string key) {
            this.PressureAsync(key, null);
        }
        
        public void PressureAsync(string key, object userState) {
            if ((this.onBeginPressureDelegate == null)) {
                this.onBeginPressureDelegate = new BeginOperationDelegate(this.OnBeginPressure);
            }
            if ((this.onEndPressureDelegate == null)) {
                this.onEndPressureDelegate = new EndOperationDelegate(this.OnEndPressure);
            }
            if ((this.onPressureCompletedDelegate == null)) {
                this.onPressureCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPressureCompleted);
            }
            base.InvokeAsync(this.onBeginPressureDelegate, new object[] {
                        key}, this.onEndPressureDelegate, this.onPressureCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightApplication.WcfService.IUnit.BeginTemperature(string key, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTemperature(key, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        double SilverlightApplication.WcfService.IUnit.EndTemperature(System.IAsyncResult result) {
            return base.Channel.EndTemperature(result);
        }
        
        private System.IAsyncResult OnBeginTemperature(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string key = ((string)(inValues[0]));
            return ((SilverlightApplication.WcfService.IUnit)(this)).BeginTemperature(key, callback, asyncState);
        }
        
        private object[] OnEndTemperature(System.IAsyncResult result) {
            double retVal = ((SilverlightApplication.WcfService.IUnit)(this)).EndTemperature(result);
            return new object[] {
                    retVal};
        }
        
        private void OnTemperatureCompleted(object state) {
            if ((this.TemperatureCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TemperatureCompleted(this, new TemperatureCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TemperatureAsync(string key) {
            this.TemperatureAsync(key, null);
        }
        
        public void TemperatureAsync(string key, object userState) {
            if ((this.onBeginTemperatureDelegate == null)) {
                this.onBeginTemperatureDelegate = new BeginOperationDelegate(this.OnBeginTemperature);
            }
            if ((this.onEndTemperatureDelegate == null)) {
                this.onEndTemperatureDelegate = new EndOperationDelegate(this.OnEndTemperature);
            }
            if ((this.onTemperatureCompletedDelegate == null)) {
                this.onTemperatureCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTemperatureCompleted);
            }
            base.InvokeAsync(this.onBeginTemperatureDelegate, new object[] {
                        key}, this.onEndTemperatureDelegate, this.onTemperatureCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightApplication.WcfService.IUnit.BeginReheatTemperature(string key, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReheatTemperature(key, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        double SilverlightApplication.WcfService.IUnit.EndReheatTemperature(System.IAsyncResult result) {
            return base.Channel.EndReheatTemperature(result);
        }
        
        private System.IAsyncResult OnBeginReheatTemperature(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string key = ((string)(inValues[0]));
            return ((SilverlightApplication.WcfService.IUnit)(this)).BeginReheatTemperature(key, callback, asyncState);
        }
        
        private object[] OnEndReheatTemperature(System.IAsyncResult result) {
            double retVal = ((SilverlightApplication.WcfService.IUnit)(this)).EndReheatTemperature(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReheatTemperatureCompleted(object state) {
            if ((this.ReheatTemperatureCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReheatTemperatureCompleted(this, new ReheatTemperatureCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReheatTemperatureAsync(string key) {
            this.ReheatTemperatureAsync(key, null);
        }
        
        public void ReheatTemperatureAsync(string key, object userState) {
            if ((this.onBeginReheatTemperatureDelegate == null)) {
                this.onBeginReheatTemperatureDelegate = new BeginOperationDelegate(this.OnBeginReheatTemperature);
            }
            if ((this.onEndReheatTemperatureDelegate == null)) {
                this.onEndReheatTemperatureDelegate = new EndOperationDelegate(this.OnEndReheatTemperature);
            }
            if ((this.onReheatTemperatureCompletedDelegate == null)) {
                this.onReheatTemperatureCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReheatTemperatureCompleted);
            }
            base.InvokeAsync(this.onBeginReheatTemperatureDelegate, new object[] {
                        key}, this.onEndReheatTemperatureDelegate, this.onReheatTemperatureCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightApplication.WcfService.IUnit.BeginVacuum(string key, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVacuum(key, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        double SilverlightApplication.WcfService.IUnit.EndVacuum(System.IAsyncResult result) {
            return base.Channel.EndVacuum(result);
        }
        
        private System.IAsyncResult OnBeginVacuum(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string key = ((string)(inValues[0]));
            return ((SilverlightApplication.WcfService.IUnit)(this)).BeginVacuum(key, callback, asyncState);
        }
        
        private object[] OnEndVacuum(System.IAsyncResult result) {
            double retVal = ((SilverlightApplication.WcfService.IUnit)(this)).EndVacuum(result);
            return new object[] {
                    retVal};
        }
        
        private void OnVacuumCompleted(object state) {
            if ((this.VacuumCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VacuumCompleted(this, new VacuumCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VacuumAsync(string key) {
            this.VacuumAsync(key, null);
        }
        
        public void VacuumAsync(string key, object userState) {
            if ((this.onBeginVacuumDelegate == null)) {
                this.onBeginVacuumDelegate = new BeginOperationDelegate(this.OnBeginVacuum);
            }
            if ((this.onEndVacuumDelegate == null)) {
                this.onEndVacuumDelegate = new EndOperationDelegate(this.OnEndVacuum);
            }
            if ((this.onVacuumCompletedDelegate == null)) {
                this.onVacuumCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVacuumCompleted);
            }
            base.InvokeAsync(this.onBeginVacuumDelegate, new object[] {
                        key}, this.onEndVacuumDelegate, this.onVacuumCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightApplication.WcfService.IUnit.BeginEfficiency(string key, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEfficiency(key, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        double SilverlightApplication.WcfService.IUnit.EndEfficiency(System.IAsyncResult result) {
            return base.Channel.EndEfficiency(result);
        }
        
        private System.IAsyncResult OnBeginEfficiency(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string key = ((string)(inValues[0]));
            return ((SilverlightApplication.WcfService.IUnit)(this)).BeginEfficiency(key, callback, asyncState);
        }
        
        private object[] OnEndEfficiency(System.IAsyncResult result) {
            double retVal = ((SilverlightApplication.WcfService.IUnit)(this)).EndEfficiency(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEfficiencyCompleted(object state) {
            if ((this.EfficiencyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EfficiencyCompleted(this, new EfficiencyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EfficiencyAsync(string key) {
            this.EfficiencyAsync(key, null);
        }
        
        public void EfficiencyAsync(string key, object userState) {
            if ((this.onBeginEfficiencyDelegate == null)) {
                this.onBeginEfficiencyDelegate = new BeginOperationDelegate(this.OnBeginEfficiency);
            }
            if ((this.onEndEfficiencyDelegate == null)) {
                this.onEndEfficiencyDelegate = new EndOperationDelegate(this.OnEndEfficiency);
            }
            if ((this.onEfficiencyCompletedDelegate == null)) {
                this.onEfficiencyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEfficiencyCompleted);
            }
            base.InvokeAsync(this.onBeginEfficiencyDelegate, new object[] {
                        key}, this.onEndEfficiencyDelegate, this.onEfficiencyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightApplication.WcfService.IUnit.BeginHeatconsumption(string key, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHeatconsumption(key, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        double SilverlightApplication.WcfService.IUnit.EndHeatconsumption(System.IAsyncResult result) {
            return base.Channel.EndHeatconsumption(result);
        }
        
        private System.IAsyncResult OnBeginHeatconsumption(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string key = ((string)(inValues[0]));
            return ((SilverlightApplication.WcfService.IUnit)(this)).BeginHeatconsumption(key, callback, asyncState);
        }
        
        private object[] OnEndHeatconsumption(System.IAsyncResult result) {
            double retVal = ((SilverlightApplication.WcfService.IUnit)(this)).EndHeatconsumption(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHeatconsumptionCompleted(object state) {
            if ((this.HeatconsumptionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HeatconsumptionCompleted(this, new HeatconsumptionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HeatconsumptionAsync(string key) {
            this.HeatconsumptionAsync(key, null);
        }
        
        public void HeatconsumptionAsync(string key, object userState) {
            if ((this.onBeginHeatconsumptionDelegate == null)) {
                this.onBeginHeatconsumptionDelegate = new BeginOperationDelegate(this.OnBeginHeatconsumption);
            }
            if ((this.onEndHeatconsumptionDelegate == null)) {
                this.onEndHeatconsumptionDelegate = new EndOperationDelegate(this.OnEndHeatconsumption);
            }
            if ((this.onHeatconsumptionCompletedDelegate == null)) {
                this.onHeatconsumptionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHeatconsumptionCompleted);
            }
            base.InvokeAsync(this.onBeginHeatconsumptionDelegate, new object[] {
                        key}, this.onEndHeatconsumptionDelegate, this.onHeatconsumptionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightApplication.WcfService.IUnit.BeginCoalconsumption(string key, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCoalconsumption(key, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        double SilverlightApplication.WcfService.IUnit.EndCoalconsumption(System.IAsyncResult result) {
            return base.Channel.EndCoalconsumption(result);
        }
        
        private System.IAsyncResult OnBeginCoalconsumption(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string key = ((string)(inValues[0]));
            return ((SilverlightApplication.WcfService.IUnit)(this)).BeginCoalconsumption(key, callback, asyncState);
        }
        
        private object[] OnEndCoalconsumption(System.IAsyncResult result) {
            double retVal = ((SilverlightApplication.WcfService.IUnit)(this)).EndCoalconsumption(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCoalconsumptionCompleted(object state) {
            if ((this.CoalconsumptionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CoalconsumptionCompleted(this, new CoalconsumptionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CoalconsumptionAsync(string key) {
            this.CoalconsumptionAsync(key, null);
        }
        
        public void CoalconsumptionAsync(string key, object userState) {
            if ((this.onBeginCoalconsumptionDelegate == null)) {
                this.onBeginCoalconsumptionDelegate = new BeginOperationDelegate(this.OnBeginCoalconsumption);
            }
            if ((this.onEndCoalconsumptionDelegate == null)) {
                this.onEndCoalconsumptionDelegate = new EndOperationDelegate(this.OnEndCoalconsumption);
            }
            if ((this.onCoalconsumptionCompletedDelegate == null)) {
                this.onCoalconsumptionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCoalconsumptionCompleted);
            }
            base.InvokeAsync(this.onBeginCoalconsumptionDelegate, new object[] {
                        key}, this.onEndCoalconsumptionDelegate, this.onCoalconsumptionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightApplication.WcfService.IUnit.BeginVal(string key, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVal(key, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<double> SilverlightApplication.WcfService.IUnit.EndVal(System.IAsyncResult result) {
            return base.Channel.EndVal(result);
        }
        
        private System.IAsyncResult OnBeginVal(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string key = ((string)(inValues[0]));
            return ((SilverlightApplication.WcfService.IUnit)(this)).BeginVal(key, callback, asyncState);
        }
        
        private object[] OnEndVal(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<double> retVal = ((SilverlightApplication.WcfService.IUnit)(this)).EndVal(result);
            return new object[] {
                    retVal};
        }
        
        private void OnValCompleted(object state) {
            if ((this.ValCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValCompleted(this, new ValCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ValAsync(string key) {
            this.ValAsync(key, null);
        }
        
        public void ValAsync(string key, object userState) {
            if ((this.onBeginValDelegate == null)) {
                this.onBeginValDelegate = new BeginOperationDelegate(this.OnBeginVal);
            }
            if ((this.onEndValDelegate == null)) {
                this.onEndValDelegate = new EndOperationDelegate(this.OnEndVal);
            }
            if ((this.onValCompletedDelegate == null)) {
                this.onValCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValCompleted);
            }
            base.InvokeAsync(this.onBeginValDelegate, new object[] {
                        key}, this.onEndValDelegate, this.onValCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SilverlightApplication.WcfService.IUnit CreateChannel() {
            return new UnitClientChannel(this);
        }
        
        private class UnitClientChannel : ChannelBase<SilverlightApplication.WcfService.IUnit>, SilverlightApplication.WcfService.IUnit {
            
            public UnitClientChannel(System.ServiceModel.ClientBase<SilverlightApplication.WcfService.IUnit> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginPower(string key, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = key;
                System.IAsyncResult _result = base.BeginInvoke("Power", _args, callback, asyncState);
                return _result;
            }
            
            public double EndPower(System.IAsyncResult result) {
                object[] _args = new object[0];
                double _result = ((double)(base.EndInvoke("Power", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginHisPower(string key, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = key;
                System.IAsyncResult _result = base.BeginInvoke("HisPower", _args, callback, asyncState);
                return _result;
            }
            
            public double EndHisPower(System.IAsyncResult result) {
                object[] _args = new object[0];
                double _result = ((double)(base.EndInvoke("HisPower", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPowerMax(string key, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = key;
                System.IAsyncResult _result = base.BeginInvoke("PowerMax", _args, callback, asyncState);
                return _result;
            }
            
            public double EndPowerMax(System.IAsyncResult result) {
                object[] _args = new object[0];
                double _result = ((double)(base.EndInvoke("PowerMax", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPowerMin(string key, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = key;
                System.IAsyncResult _result = base.BeginInvoke("PowerMin", _args, callback, asyncState);
                return _result;
            }
            
            public double EndPowerMin(System.IAsyncResult result) {
                object[] _args = new object[0];
                double _result = ((double)(base.EndInvoke("PowerMin", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPowerAvg(string key, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = key;
                System.IAsyncResult _result = base.BeginInvoke("PowerAvg", _args, callback, asyncState);
                return _result;
            }
            
            public double EndPowerAvg(System.IAsyncResult result) {
                object[] _args = new object[0];
                double _result = ((double)(base.EndInvoke("PowerAvg", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFlow(string key, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = key;
                System.IAsyncResult _result = base.BeginInvoke("Flow", _args, callback, asyncState);
                return _result;
            }
            
            public double EndFlow(System.IAsyncResult result) {
                object[] _args = new object[0];
                double _result = ((double)(base.EndInvoke("Flow", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPressure(string key, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = key;
                System.IAsyncResult _result = base.BeginInvoke("Pressure", _args, callback, asyncState);
                return _result;
            }
            
            public double EndPressure(System.IAsyncResult result) {
                object[] _args = new object[0];
                double _result = ((double)(base.EndInvoke("Pressure", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginTemperature(string key, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = key;
                System.IAsyncResult _result = base.BeginInvoke("Temperature", _args, callback, asyncState);
                return _result;
            }
            
            public double EndTemperature(System.IAsyncResult result) {
                object[] _args = new object[0];
                double _result = ((double)(base.EndInvoke("Temperature", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginReheatTemperature(string key, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = key;
                System.IAsyncResult _result = base.BeginInvoke("ReheatTemperature", _args, callback, asyncState);
                return _result;
            }
            
            public double EndReheatTemperature(System.IAsyncResult result) {
                object[] _args = new object[0];
                double _result = ((double)(base.EndInvoke("ReheatTemperature", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginVacuum(string key, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = key;
                System.IAsyncResult _result = base.BeginInvoke("Vacuum", _args, callback, asyncState);
                return _result;
            }
            
            public double EndVacuum(System.IAsyncResult result) {
                object[] _args = new object[0];
                double _result = ((double)(base.EndInvoke("Vacuum", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEfficiency(string key, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = key;
                System.IAsyncResult _result = base.BeginInvoke("Efficiency", _args, callback, asyncState);
                return _result;
            }
            
            public double EndEfficiency(System.IAsyncResult result) {
                object[] _args = new object[0];
                double _result = ((double)(base.EndInvoke("Efficiency", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginHeatconsumption(string key, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = key;
                System.IAsyncResult _result = base.BeginInvoke("Heatconsumption", _args, callback, asyncState);
                return _result;
            }
            
            public double EndHeatconsumption(System.IAsyncResult result) {
                object[] _args = new object[0];
                double _result = ((double)(base.EndInvoke("Heatconsumption", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCoalconsumption(string key, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = key;
                System.IAsyncResult _result = base.BeginInvoke("Coalconsumption", _args, callback, asyncState);
                return _result;
            }
            
            public double EndCoalconsumption(System.IAsyncResult result) {
                object[] _args = new object[0];
                double _result = ((double)(base.EndInvoke("Coalconsumption", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginVal(string key, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = key;
                System.IAsyncResult _result = base.BeginInvoke("Val", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<double> EndVal(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<double> _result = ((System.Collections.ObjectModel.ObservableCollection<double>)(base.EndInvoke("Val", _args, result)));
                return _result;
            }
        }
    }
}
